

Perhaps this will help. The bits before the first rex command are just for creating test events and should be omitted from queries using real data.

The rex commands extract fields for later use. Two rex commands are used - one for the fields in the "Welcome" event and one for the other events.

The stats command groups events by common case No values.

Then we finally can start looking for the specified criteria. The eval command looks for each string and sets the result to "True" or "False". The mvfind command returns an index into the messages field so we use isnotnull to test for presence.

| makeresults | eval data="message: Welcome case No 123abc-yt454-234 UserId - 1203 UserConti - 76542  Elect - 5789875  Later Code - QWERZX
message: Passed First class case No 123abc-yt454-234 
message: Failed First class case No 123abc-yt454-234 
message: Passed Second class case No 123abc-yt454-234 
message: Fully Failed case No 123abc-yt454-234 
message: Saved case No 123abc-yt454-234 
message: Not saved case No 123abc-yt454-234 
message: Not user to us case No 123abc-yt454-234" | eval data=split(data,"
") | mvexpand data | eval _raw=data | fields - data
```Above code just sets up test data - don't use in a real query```
```Extract fields.```
| rex "message: (?<message>.*?) case No (?<caseNo>\S+)"
| rex "UserId - (?<UserId>\S+) UserConti - (?<UserConti>\S+)\s+Elect - (?<Elect>\S+)\s+Later Code - (?<LaterCode>\S+)"
```Merge events with the same case number```
| stats values(message) as messages, values(*) as * by caseNo
```Test for the presence of texts in messages```
| eval "Passed First class"=if(isnotnull(mvfind(messages, "Passed First class")),"True","False"), "Passed Second class"=if(isnotnull(mvfind(messages, "Passed Second class")),"True","False"), "Failed First class"=if(isnotnull(mvfind(messages, "Failed First class")),"True","False"), "Saved"=if(isnotnull(mvfind(messages, "Saved")),"True","False"), "Not saved"=if(isnotnull(mvfind(messages, "Not saved")),"True","False"), "Not user to us"=if(isnotnull(mvfind(messages, "Not user to us")),"True","False")
| rename LaterCode as "Later Code"
| table caseNo UserId UserConti Elect "Later Code" "Passed First class" "Passed Second class" "Failed First class" Saved "Not saved" "Not user to us"
